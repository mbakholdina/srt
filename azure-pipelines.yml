# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  configuration_debug: Debug
  configuration_release: Release

strategy:
  matrix:
    ubuntu1604_debug:
      imageName: "ubuntu-16.04"
      configuration: $(configuration_debug)
    ubuntu1604_release:
      imageName: "ubuntu-16.04"
      configuration: $(configuration_release)
    # mac:
    #   imageName: "macos-10.13"
    #   configuration: Release
    # windows:
    #   imageName: "vs2017-win2016"
  maxParallel: 3

pool:
  vmImage: $(imageName)

steps:
- script: echo Hello!
  condition: always() # this step will always run, even if the pipeline is cancelled

- script: echo variables.configuration

- script: echo Debug
  # condition: $[ if ($(configuration), $(configuration_debug)) == True ]
  # condition: and(succeeded(), eq($(configuration), $(configuration_debug)))
  condition: ${{ eq(variables.configuration, variables.configuration_debug) }}


# - ${{ if eq($(configuration), $(configuration_debug)) }}:
#   - script: echo Debug
# - ${{ else }}:
#   - script: echo Release


# - script: |
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'

# CMake
# Build with the CMake cross-platform build system
# - task: CMake@1
#   inputs:
#     workingDirectory: 'build'
#     cmakeArgs: '../ -DCMAKE_BUILD_TYPE=$(configuration)'
#   displayName: 'Super cmake'

# - task: CMake@1
#   inputs:
#     workingDirectory: 'build'
#     cmakeArgs: '--build ./'


